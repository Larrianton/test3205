{"version":3,"sources":["components/Convert/Convert.tsx","components/Course/Course.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Convert","useState","result","setResult","className","value","onKeyPress","e","key","axios","get","then","res","data","rates","USD","toFixed","to","Course","useEffect","rateUsd","rateEur","EUR","setUsd","setEur","usd","eur","navigator","language","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAWO,SAASA,IAAW,IAAD,EACMC,qBADN,mBACfC,EADe,KACPC,EADO,KAetB,OACI,sBAAKC,UAAU,UAAf,UACI,uBACIC,MAAO,mBACPC,WAfS,SAACC,GACJ,UAAVA,EAAEC,KACFC,IAAMC,IAAN,0CAAkEC,MAAK,SAAAC,GACnE,IAEMV,GADW,GADJU,EAAIC,KAAKC,MAAMC,KAEJC,QAAQ,GAChCb,EAAUD,SAWd,oCAAOA,EAAP,OACA,cAAC,IAAD,CAAMe,GAAG,UAAT,2BCvBL,SAASC,IACZC,qBAAU,WAONV,IAAMC,IAAN,0CAAkEC,MAAK,SAAAC,GACnE,IAAMQ,EAAUR,EAAIC,KAAKC,MAAMC,IACzBM,EAAUT,EAAIC,KAAKC,MAAMQ,IAC/BC,EAAOH,GACPI,EAAOH,QATZ,IAHkB,MAICpB,mBAAiB,GAJlB,mBAIdwB,EAJc,KAITF,EAJS,OAKCtB,mBAAiB,GALlB,mBAKdyB,EALc,KAKTF,EALS,KAiBrB,MAAoB,UADAG,UAAUC,SAEnB,gCACH,4CAAeH,EAAf,UACA,2CAAcC,EAAd,aAKJ,sBAAKtB,UAAU,UAAf,UACI,uDAAmB,EAAIqB,GAAKT,QAAQ,IAApC,aACA,uDAAmB,EAAIU,GAAKV,QAAQ,IAApC,gB,WCdGa,MAdf,WAEI,OACI,qBAAKzB,UAAU,MAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0B,KAAK,IAAIC,QAAS,cAAC/B,EAAD,MACzB,cAAC,IAAD,CAAO8B,KAAK,UAAUC,QAAS,cAACb,EAAD,cCFpCc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAG5BZ,M","file":"static/js/main.4f4f86a4.chunk.js","sourcesContent":["import React, {KeyboardEvent, useState} from \"react\"\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype ResponseType = {\r\n    rates: {\r\n        USD: number;\r\n    }\r\n\r\n}\r\n\r\nexport function Convert() {\r\n    const [result, setResult] = useState<string>();\r\n\r\n\r\n    const onEnterInput = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            axios.get<ResponseType>(`https://www.cbr-xml-daily.ru/latest.js`).then(res => {\r\n                const rate = res.data.rates.USD\r\n                const exchange = 15 / rate;\r\n                const result = exchange.toFixed(2)\r\n                setResult(result);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert\">\r\n            <input\r\n                value={\"15 usd in rubles\"}\r\n                onKeyPress={onEnterInput}\r\n            />\r\n            <div> {result} </div>\r\n            <Link to=\"/course\">SEE COURSE</Link>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport axios from \"axios\";\r\n\r\ntype ResponseType = {\r\n    rates: {\r\n        USD: number;\r\n        EUR: number;\r\n    }\r\n}\r\n\r\nexport function Course() {\r\n    useEffect(() => {\r\n        getRate();\r\n    }, [])\r\n    const [usd, setUsd] = useState<number>(0);\r\n    const [eur, setEur] = useState<number>(0);\r\n\r\n    function getRate() {\r\n        axios.get<ResponseType>(`https://www.cbr-xml-daily.ru/latest.js`).then(res => {\r\n            const rateUsd = res.data.rates.USD\r\n            const rateEur = res.data.rates.EUR\r\n            setUsd(rateUsd);\r\n            setEur(rateEur);\r\n        })\r\n    }\r\n\r\n    const browserLang = navigator.language\r\n    if (browserLang === 'en-US') {\r\n        return <div>\r\n            <div> 1 RUB = {usd} USD</div>\r\n            <div>1 RUB = {eur} EUR</div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert\">\r\n            <div> 1 USD = {`${(1 / usd).toFixed(2)}`} RUBLES</div>\r\n            <div> 1 EUR = {`${(1 / eur).toFixed(2)}`} RUBLES</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './App.css';\r\nimport {Convert} from \"./components/Convert/Convert\";\r\nimport {Course} from \"./components/Course/Course\";\r\nimport {HashRouter, Routes} from \"react-router-dom\";\r\nimport {Route} from \"react-router\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Convert/>}/>\r\n                    <Route path=\"/course\" element={<Course/>}/>\r\n                </Routes>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}